{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\LMNT\\\\frontend\\\\src\\\\components\\\\LeftSidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/LeftSidebar.css';\nimport { usePagesContext } from '../hooks/usePagesContext';\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\n\n// components\nimport ContextMenu from './ContextMenu';\nimport DeletePageButton from './DeletePageButton';\nimport RenamePageButton from './RenamePageButton';\n\n/* Contains the list of pages available on the left side, from their highest level\r\n    and sortable. To be created:\r\n\r\n    Framework\r\n    Create section/folder (not a page, just a sortation tool)\r\n        Creating a section will create a button with a label that expands all pages\r\n        stored in said section\r\n        Section Page (as mentioned below) will allow for a folder as well a front page for\r\n        the pages in the section, such as a country and then all of its city pages\r\n        listed below\r\n    Create section page (potentially add \"section: boolean\" to Page.js)\r\n    Dropdown for each section\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftSidebar = () => {\n  _s();\n  const {\n    pages,\n    dispatch\n  } = usePagesContext();\n  const [contextMenu, setContextMenu] = useState({\n    position: {\n      x: 0,\n      y: 0\n    },\n    toggled: false,\n    page: null\n  });\n  const [renameId, setRenameId] = useState('');\n  const [editTitle, setEditTitle] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const handleClick = () => setContextMenu({\n      position: {\n        x: contextMenu.position.x,\n        y: contextMenu.position.y\n      },\n      toggled: false,\n      page: null\n    });\n    window.addEventListener('click', handleClick);\n    return () => window.removeEventListener('click', handleClick);\n  }, []);\n  const handleRightClick = (e, page) => {\n    console.log('right clicked');\n    e.preventDefault();\n    const x = e.clientX;\n    const y = e.clientY;\n    setContextMenu({\n      position: {\n        x,\n        y\n      },\n      toggled: true,\n      page: page\n    });\n  };\n  const handleRenameSubmit = async e => {\n    if (e.key === 'Enter') {\n      // Submit the title, send PATCH request, etc - initially copied from RenamePageButton\n      try {\n        console.log('attempting to rename page:', renameId);\n        const response = await fetch('/pages/' + renameId, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            title: editTitle\n          })\n        });\n        if (!response.ok) {\n          const errorJson = await response.json();\n          console.log('Found error in updating page:', errorJson);\n          setError(errorJson.error || 'Failed to update page');\n          return;\n        }\n        const updatedPage = await response.json();\n        setError(null);\n        console.log('Updated page');\n        dispatch({\n          type: 'UPDATE_PAGE',\n          payload: updatedPage\n        });\n      } catch (err) {\n        console.error('Submission failed', err);\n        setError('Something went wrong!');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: '/page/home',\n        className: \"text\",\n        children: \"LMNT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      className: \"create-page-button\",\n      to: '/page/new',\n      children: \"Create Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), pages && pages.map(page => /*#__PURE__*/_jsxDEV(\"div\", {\n      onContextMenu: e => {\n        handleRightClick(e, page);\n      },\n      children: page._id === renameId ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onKeyDown: handleRenameSubmit,\n        autoFocus: true,\n        onBlur: () => setRenameId(''),\n        onChange: e => setEditTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"page-link\",\n        to: '/page/' + page._id,\n        children: page.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)\n    }, page._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)), contextMenu.toggled && /*#__PURE__*/_jsxDEV(ContextMenu, {\n      isVisible: contextMenu.toggled,\n      position: contextMenu.position,\n      page: contextMenu.page,\n      children: [/*#__PURE__*/_jsxDEV(RenamePageButton, {\n        page: contextMenu.page,\n        title: \"Updated Page\",\n        className: \"context-menu-button\",\n        children: \"New Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DeletePageButton, {\n        page: contextMenu.page,\n        className: \"context-menu-button\",\n        children: \"Delete Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"context-menu-button\",\n        children: \"Rename Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(LeftSidebar, \"K/0J005ozrPiIs+0hDZTCCFoOyM=\", false, function () {\n  return [usePagesContext];\n});\n_c = LeftSidebar;\nexport default LeftSidebar;\nvar _c;\n$RefreshReg$(_c, \"LeftSidebar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","usePagesContext","NavLink","Outlet","useParams","ContextMenu","DeletePageButton","RenamePageButton","jsxDEV","_jsxDEV","LeftSidebar","_s","pages","dispatch","contextMenu","setContextMenu","position","x","y","toggled","page","renameId","setRenameId","editTitle","setEditTitle","error","setError","handleClick","window","addEventListener","removeEventListener","handleRightClick","e","console","log","preventDefault","clientX","clientY","handleRenameSubmit","key","response","fetch","method","headers","body","JSON","stringify","title","ok","errorJson","json","updatedPage","type","payload","err","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","map","onContextMenu","_id","onKeyDown","autoFocus","onBlur","onChange","target","value","isVisible","_c","$RefreshReg$"],"sources":["D:/Personal Projects/LMNT/frontend/src/components/LeftSidebar.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '../styles/LeftSidebar.css';\r\nimport { usePagesContext } from '../hooks/usePagesContext';\r\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\r\n\r\n// components\r\nimport ContextMenu from './ContextMenu';\r\nimport DeletePageButton from './DeletePageButton';\r\nimport RenamePageButton from './RenamePageButton';\r\n\r\n/* Contains the list of pages available on the left side, from their highest level\r\n    and sortable. To be created:\r\n\r\n    Framework\r\n    Create section/folder (not a page, just a sortation tool)\r\n        Creating a section will create a button with a label that expands all pages\r\n        stored in said section\r\n        Section Page (as mentioned below) will allow for a folder as well a front page for\r\n        the pages in the section, such as a country and then all of its city pages\r\n        listed below\r\n    Create section page (potentially add \"section: boolean\" to Page.js)\r\n    Dropdown for each section\r\n*/\r\n\r\nconst LeftSidebar = () => {\r\n  const { pages, dispatch } = usePagesContext();\r\n  const [contextMenu, setContextMenu] = useState({\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n    },\r\n    toggled: false,\r\n    page: null\r\n  })\r\n  const [renameId, setRenameId] = useState('');\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleClick = () => setContextMenu({\r\n        position: {\r\n            x: contextMenu.position.x,\r\n            y: contextMenu.position.y,\r\n        },\r\n        toggled: false,\r\n        page: null\r\n    })\r\n    window.addEventListener('click', handleClick)\r\n    return () => window.removeEventListener('click', handleClick)\r\n  }, [])\r\n\r\n  const handleRightClick = (e, page) => {\r\n    console.log('right clicked')\r\n    e.preventDefault()\r\n\r\n    const x = e.clientX\r\n    const y = e.clientY\r\n\r\n    setContextMenu({\r\n        position: {\r\n            x,\r\n            y,\r\n        },\r\n        toggled: true,\r\n        page: page\r\n    })\r\n  }\r\n\r\n  const handleRenameSubmit = async (e) => {\r\n    if (e.key === 'Enter') {\r\n        // Submit the title, send PATCH request, etc - initially copied from RenamePageButton\r\n        try {\r\n            console.log('attempting to rename page:', renameId);\r\n            const response = await fetch('/pages/' + renameId, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ title: editTitle })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorJson = await response.json();\r\n                console.log('Found error in updating page:', errorJson);\r\n                setError(errorJson.error || 'Failed to update page');\r\n                return;\r\n            } \r\n\r\n            const updatedPage = await response.json();\r\n            setError(null);\r\n            console.log('Updated page');\r\n            dispatch({ type: 'UPDATE_PAGE', payload: updatedPage });\r\n        } catch (err) {\r\n            console.error('Submission failed', err);\r\n            setError('Something went wrong!');\r\n        }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n        <div className=\"logo\">\r\n            <NavLink to={'/page/home'} className=\"text\">LMNT</NavLink>\r\n        </div>\r\n        <NavLink className=\"create-page-button\" to={'/page/new'}>Create Page</NavLink>\r\n\r\n        {/* Loop through the pages, and if the current pageid matches the id of the rename-page, then instead \r\n            of a NavLink, put an input button. On submit, delete the rename-page id and the map will display\r\n            as a NavLink once again\r\n        */}\r\n\r\n        {pages && pages.map((page) => (\r\n            <div \r\n                onContextMenu={(e) => {handleRightClick(e, page)}}\r\n                key={page._id} \r\n            >\r\n                {page._id === renameId ? (\r\n                    <input\r\n                        type=\"text\"\r\n                        onKeyDown={handleRenameSubmit}\r\n                        autoFocus\r\n                        onBlur={() => setRenameId('')}\r\n                        onChange={(e) => setEditTitle(e.target.value)}\r\n                    />\r\n                ) : (\r\n                    <NavLink \r\n                    className=\"page-link\" \r\n                    to={'/page/' + page._id}\r\n                >\r\n                    {page.title}\r\n                </NavLink>\r\n                )}\r\n            </div>\r\n        ))}\r\n        {contextMenu.toggled && <ContextMenu \r\n            isVisible={contextMenu.toggled}\r\n            position={contextMenu.position}\r\n            page={contextMenu.page}\r\n        >\r\n            <RenamePageButton page={contextMenu.page} title={\"Updated Page\"} className=\"context-menu-button\">New Page</RenamePageButton>\r\n            <DeletePageButton page={contextMenu.page} className=\"context-menu-button\">Delete Page</DeletePageButton>\r\n            <button className=\"context-menu-button\">Rename Page</button>\r\n\r\n        </ContextMenu>\r\n        }\r\n    </div>    \r\n  );\r\n};\r\n\r\nexport default LeftSidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}