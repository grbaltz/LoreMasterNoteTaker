{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\LMNT\\\\frontend\\\\src\\\\components\\\\CreatePageForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { usePagesContext } from '../hooks/usePagesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePageForm = () => {\n  _s();\n  const {\n    dispatch\n  } = usePagesContext();\n  const [title, setTitle] = useState('');\n  const [tags, setTags] = useState([]);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const page = {\n      title,\n      tags\n    };\n    const response = await fetch('/api/pages', {\n      method: 'POST',\n      body: JSON.stringify(page),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      console.log('found error in submitting form');\n      setError(json.error);\n    }\n    if (response.ok) {\n      setError(null);\n      // reset\n      setTitle('');\n      // setTags('')\n\n      console.log('Added page');\n      dispatch({\n        type: 'CREATE_PAGE',\n        payload: json\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"inputs\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePageForm, \"0OSCTQgztJ6d6ha6eYOyZ2J1jN4=\", false, function () {\n  return [usePagesContext];\n});\n_c = CreatePageForm;\nexport default CreatePageForm;\nvar _c;\n$RefreshReg$(_c, \"CreatePageForm\");","map":{"version":3,"names":["React","useState","usePagesContext","jsxDEV","_jsxDEV","CreatePageForm","_s","dispatch","title","setTitle","tags","setTags","error","setError","handleSubmit","e","preventDefault","page","response","fetch","method","body","JSON","stringify","headers","json","ok","console","log","type","payload","className","onSubmit","children","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Personal Projects/LMNT/frontend/src/components/CreatePageForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { usePagesContext } from '../hooks/usePagesContext'\r\n\r\n\r\nconst CreatePageForm = () => {\r\n    const {dispatch} = usePagesContext()\r\n    const [title, setTitle] = useState('')\r\n    const [tags, setTags] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const page = {title, tags}\r\n\r\n        const response = await fetch('/api/pages', {\r\n            method: 'POST',\r\n            body: JSON.stringify(page),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            console.log('found error in submitting form')\r\n            setError(json.error)\r\n        } \r\n        if (response.ok) {\r\n            setError(null)\r\n            // reset\r\n            setTitle('')\r\n            // setTags('')\r\n\r\n            console.log('Added page')\r\n            dispatch({type: 'CREATE_PAGE', payload: json})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"inputs\" onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                value={title}\r\n            />\r\n            <button>Add Page</button>\r\n            {error && <div className=\"error\">{error}</div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreatePageForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAACC;EAAQ,CAAC,GAAGL,eAAe,CAAC,CAAC;EACpC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,IAAI,GAAG;MAACT,KAAK;MAAEE;IAAI,CAAC;IAE1B,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;MAC1BO,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7Cf,QAAQ,CAACY,IAAI,CAACb,KAAK,CAAC;IACxB;IACA,IAAIM,QAAQ,CAACQ,EAAE,EAAE;MACbb,QAAQ,CAAC,IAAI,CAAC;MACd;MACAJ,QAAQ,CAAC,EAAE,CAAC;MACZ;;MAEAkB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzBrB,QAAQ,CAAC;QAACsB,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;IAClD;EACJ,CAAC;EAED,oBACIrB,OAAA;IAAM2B,SAAS,EAAC,QAAQ;IAACC,QAAQ,EAAElB,YAAa;IAAAmB,QAAA,gBAC5C7B,OAAA;MACIyB,IAAI,EAAC,MAAM;MACXK,QAAQ,EAAGnB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACoB,MAAM,CAACC,KAAK,CAAE;MAC1CA,KAAK,EAAE5B;IAAM;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACFpC,OAAA;MAAA6B,QAAA,EAAQ;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxB5B,KAAK,iBAAIR,OAAA;MAAK2B,SAAS,EAAC,OAAO;MAAAE,QAAA,EAAErB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEf,CAAC;AAAAlC,EAAA,CA9CKD,cAAc;EAAA,QACGH,eAAe;AAAA;AAAAuC,EAAA,GADhCpC,cAAc;AAgDpB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}