{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\LMNT\\\\frontend\\\\src\\\\components\\\\PageContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useParams } from 'react';\nimport '../styles/PageContent.css';\n\n// Components/Variables\nimport { commandsList } from './Commands';\n\n/* \r\n    Main space for where content/notes are written/stored for each page\r\n    Customizable with text editing, commands, formatting, and elements\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContent = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [content, setContent] = useState('');\n  const [expComm, setExpComm] = useState(false);\n  const [command, setCommand] = useState('');\n  const [ignoreKeys] = useState([\"Shift\", \"CapsLock\", \"Control\", \"Alt\"]);\n\n  // Handles commands\n  /*\r\n      Commands:\r\n      - Change heading size\r\n      - Insert table\r\n      - Insert image\r\n      - Roll from loot-table\r\n      - Dice roll\r\n      TODO\r\n  */\n  const handleKeyDown = e => {\n    setContent(e.target.value);\n\n    // If '/', trigger command menu\n    if (e.key === '/') {\n      console.log('Command expected');\n      setExpComm(true);\n      setCommand('');\n      return;\n    } else {\n      setContent(e.target.value);\n    }\n\n    // If expecting a command (ExpComm), then save inputs until 'enter', 'tab', or submission\n    if (expComm) {\n      if (e.key === 'Enter' || e.key === 'Tab' || e.key === ' ') {\n        // TODO add submission criteria\n        // TODO Submit\n        const foundCommand = commandsList.find(e => e.name.includes(command));\n        if (foundCommand) {\n          e.preventDefault();\n          const comLength = foundCommand.name.length + 2;\n          setContent(content.slice(0, -comLength));\n          foundCommand.execute();\n        }\n        console.log('Command submitted: ' + command);\n        setCommand('');\n        setExpComm(false);\n        return;\n      } else if (e.key === 'Backspace') {\n        if (command.length > 0) {\n          setCommand(command.slice(0, -1));\n        } else {\n          // Exit command sequence\n          setCommand('');\n          setExpComm(false);\n          console.log('Exited command sequence');\n        }\n      } else if (ignoreKeys.includes(e.key)) {\n        console.log(\"Skipped key: \" + e.key);\n      } else {\n        setCommand(command + e.key);\n      }\n    }\n    if (command.length > 0) console.log(command);\n  };\n\n  // Updates content, affected by handleKeyDown\n  const handleInput = async e => {\n    const newContent = e.target.innerHTML;\n    setContent(newContent);\n    try {\n      const response = await fetch(`/pages/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: newContent\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Failed to update content:', errorData);\n      }\n    } catch (err) {\n      console.error('Error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    name: \"page-content\",\n    id: \"page-content\",\n    value: content\n    // onChange={handleChange}\n    ,\n    className: \"page-content-container\",\n    onKeyDown: handleKeyDown,\n    contenteditable: \"true\",\n    onInput: handleInput\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(PageContent, \"QlE7imMshtWHFSvJtzuRtOT8X20=\", false, function () {\n  return [useParams];\n});\n_c = PageContent;\nexport default PageContent;\nvar _c;\n$RefreshReg$(_c, \"PageContent\");","map":{"version":3,"names":["React","useState","useParams","commandsList","jsxDEV","_jsxDEV","PageContent","_s","id","content","setContent","expComm","setExpComm","command","setCommand","ignoreKeys","handleKeyDown","e","target","value","key","console","log","foundCommand","find","name","includes","preventDefault","comLength","length","slice","execute","handleInput","newContent","innerHTML","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","error","err","className","onKeyDown","contenteditable","onInput","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Personal Projects/LMNT/frontend/src/components/PageContent.js"],"sourcesContent":["import React, { useState, useParams } from 'react';\r\nimport '../styles/PageContent.css';\r\n\r\n// Components/Variables\r\nimport { commandsList } from './Commands';\r\n\r\n/* \r\n    Main space for where content/notes are written/stored for each page\r\n    Customizable with text editing, commands, formatting, and elements\r\n*/\r\n\r\nconst PageContent = () => {\r\n    const { id } = useParams();\r\n    const [content, setContent] = useState('');\r\n    const [expComm, setExpComm] = useState(false);\r\n    const [command, setCommand] = useState('');\r\n    const [ignoreKeys] = useState([\"Shift\", \"CapsLock\", \"Control\", \"Alt\"]);\r\n    \r\n    // Handles commands\r\n    /*\r\n        Commands:\r\n        - Change heading size\r\n        - Insert table\r\n        - Insert image\r\n        - Roll from loot-table\r\n        - Dice roll\r\n        TODO\r\n    */\r\n    const handleKeyDown = (e) => {\r\n        setContent(e.target.value);\r\n\r\n        // If '/', trigger command menu\r\n        if (e.key === '/') {\r\n            console.log('Command expected');\r\n            setExpComm(true);\r\n            setCommand('');\r\n            return;\r\n        } else {\r\n            setContent(e.target.value);\r\n        }\r\n\r\n        // If expecting a command (ExpComm), then save inputs until 'enter', 'tab', or submission\r\n        if (expComm) {\r\n            if (e.key === 'Enter' || e.key === 'Tab' || e.key === ' ') { // TODO add submission criteria\r\n                // TODO Submit\r\n                const foundCommand = commandsList.find(e => e.name.includes(command));\r\n                if (foundCommand) {\r\n                    e.preventDefault();\r\n                    const comLength = foundCommand.name.length + 2;\r\n                    setContent(content.slice(0, -comLength));\r\n                    foundCommand.execute();\r\n                }\r\n\r\n                console.log('Command submitted: ' + command);\r\n                setCommand('');\r\n                setExpComm(false);\r\n                return;\r\n            } else if (e.key === 'Backspace') {\r\n                if (command.length > 0) {\r\n                    setCommand(command.slice(0, -1));\r\n                } else {\r\n                    // Exit command sequence\r\n                    setCommand('');\r\n                    setExpComm(false);\r\n                    console.log('Exited command sequence');\r\n                }\r\n            } else if (ignoreKeys.includes(e.key)) {\r\n                console.log(\"Skipped key: \" + e.key);\r\n            } else {\r\n                setCommand(command + e.key);\r\n            }\r\n        }\r\n\r\n        if (command.length > 0) console.log(command);\r\n    }\r\n\r\n    // Updates content, affected by handleKeyDown\r\n    const handleInput = async (e) => {\r\n        const newContent = e.target.innerHTML;\r\n        setContent(newContent);\r\n    \r\n        try {\r\n          const response = await fetch(`/pages/${id}`, {\r\n            method: 'PATCH',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ content: newContent }),\r\n          });\r\n    \r\n          if (!response.ok) {\r\n            const errorData = await response.json();\r\n            console.error('Failed to update content:', errorData);\r\n          }\r\n        } catch (err) {\r\n          console.error('Error:', err);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div\r\n            name=\"page-content\" \r\n            id=\"page-content\" \r\n            value={content}\r\n            // onChange={handleChange}\r\n            className=\"page-content-container\"\r\n            onKeyDown={handleKeyDown}\r\n            contenteditable=\"true\"\r\n            onInput={handleInput}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PageContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}