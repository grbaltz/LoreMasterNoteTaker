{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { stripHtml } from '../utils/utils';\nconst CommandHandler = ({\n  input,\n  setInput,\n  editor\n}) => {\n  _s();\n  const [isBold, setIsBold] = useState(false);\n  const checkForCommands = useCallback(value => {\n    const text = stripHtml(value);\n    const regex = /\\/(\\w+)/g;\n    let match;\n    while ((match = regex.exec(text)) !== null) {\n      handleCommand(match[1], match.index);\n    }\n  }, [input]);\n  const clear = useCallback((command, index) => {\n    const before = input.slice(0, index);\n    const after = input.slice(index + command.length + 1);\n    setInput(`${before}${after}`);\n  }, [input, setInput]);\n  const replace = useCallback((command, index, insert) => {\n    const before = input.slice(0, index);\n    const after = input.slice(index + command.length + 1);\n    setInput(`${before}${insert}${after}`);\n  }, [input, setInput]);\n  const handleCommand = useCallback((command, index) => {\n    switch (command) {\n      case \"d20\":\n        console.log(\"Rolled a d20: \", Math.floor(Math.random() * 20) + 1);\n        let insert = String(Math.floor(Math.random() * 20) + 1);\n        replace(command, index, insert);\n        break;\n      case \"1\":\n      case \"2\":\n      case \"3\":\n        editor.format('header', Number(command));\n        break;\n      case \"4\":\n      case \"normal\":\n        editor.format('header', false);\n        break;\n      case \"bold\":\n        // Get the range index\n        const range = editor.getSelection();\n        editor.deleteText(range.index - command.length - 1, range.index);\n        editor.format('bold', !isBold);\n        setIsBold(!isBold);\n        break;\n      default:\n        console.log(`Command ${command} doesn't exist/isn't finished`);\n    }\n  }, [clear, editor, replace]);\n  useEffect(() => {\n    checkForCommands(input);\n  }, [input, checkForCommands]);\n  return null;\n};\n_s(CommandHandler, \"181xzfvONfCCWPp4hdzjTzNUB7M=\");\n_c = CommandHandler;\nexport default CommandHandler;\nvar _c;\n$RefreshReg$(_c, \"CommandHandler\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","stripHtml","CommandHandler","input","setInput","editor","_s","isBold","setIsBold","checkForCommands","value","text","regex","match","exec","handleCommand","index","clear","command","before","slice","after","length","replace","insert","console","log","Math","floor","random","String","format","Number","range","getSelection","deleteText","_c","$RefreshReg$"],"sources":["D:/Personal Projects/LMNT/frontend/src/handlers/CommandHandler.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { stripHtml } from '../utils/utils';\r\n\r\nconst CommandHandler = ({ input, setInput, editor }) => {\r\n    const [isBold, setIsBold] = useState(false)\r\n\r\n    const checkForCommands = useCallback((value) => {\r\n        const text = stripHtml(value)\r\n        const regex = /\\/(\\w+)/g;\r\n        let match;\r\n\r\n        while ((match = regex.exec(text)) !== null) {\r\n            handleCommand(match[1], match.index);\r\n        }\r\n    }, [input]);\r\n\r\n    const clear = useCallback((command, index) => {\r\n        const before = input.slice(0, index);\r\n        const after = input.slice(index + command.length + 1);\r\n        setInput(`${before}${after}`);\r\n    }, [input, setInput])\r\n\r\n    const replace = useCallback((command, index, insert) => {\r\n        const before = input.slice(0, index);\r\n        const after = input.slice(index + command.length + 1);\r\n        setInput(`${before}${insert}${after}`);\r\n    }, [input, setInput])\r\n\r\n    const handleCommand = useCallback((command, index) => {\r\n        switch (command) {\r\n            case \"d20\":\r\n                console.log(\r\n                    \"Rolled a d20: \",\r\n                    Math.floor(Math.random() * 20) + 1\r\n                );\r\n                let insert = String(Math.floor(Math.random() * 20) + 1);\r\n                replace(command, index, insert);\r\n                break;\r\n            case \"1\": case \"2\": case \"3\":\r\n                editor.format('header', Number(command))\r\n                break\r\n            case \"4\": case \"normal\":\r\n                editor.format('header', false)\r\n                break\r\n            case \"bold\":\r\n                // Get the range index\r\n                const range = editor.getSelection()\r\n                editor.deleteText(range.index - command.length - 1, range.index)\r\n                editor.format('bold', !isBold)\r\n                setIsBold(!isBold)\r\n                break;\r\n            default:\r\n                console.log(\r\n                    `Command ${command} doesn't exist/isn't finished`\r\n                );\r\n        }\r\n    }, [clear, editor, replace]);\r\n\r\n    useEffect(() => {\r\n        checkForCommands(input);\r\n    }, [input, checkForCommands]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default CommandHandler;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}