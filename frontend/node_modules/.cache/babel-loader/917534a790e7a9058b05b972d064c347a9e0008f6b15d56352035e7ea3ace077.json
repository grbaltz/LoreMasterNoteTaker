{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\LMNT\\\\frontend\\\\src\\\\components\\\\LeftSidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/LeftSidebar.css';\nimport { usePagesContext } from '../hooks/usePagesContext';\nimport { NavLink } from 'react-router-dom';\n\n// components\nimport ContextMenu from './ContextMenu';\nimport DeletePageButton from './DeletePageButton';\n\n// Sidebar to LMNT, displays list of pages, create page option, logo, etc\n// TODO: Make collapsible and adjustable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftSidebar = () => {\n  _s();\n  const {\n    pages,\n    dispatch\n  } = usePagesContext();\n  const [contextMenu, setContextMenu] = useState({\n    position: {\n      x: 0,\n      y: 0\n    },\n    toggled: false,\n    page: null\n  });\n  const [editMode, setEditMode] = useState(null); // State to track edit mode\n  const [editTitle, setEditTitle] = useState(''); // State to track the input value\n  const inputRef = useRef(null); // Ref to access the input element\n  const [newMode, setNewMode] = useState(null);\n  const [newPageParentID, setNewPageParentID] = useState(null);\n  useEffect(() => {\n    const handleClick = () => setContextMenu({\n      position: {\n        x: contextMenu.position.x,\n        y: contextMenu.position.y\n      },\n      toggled: false,\n      page: null\n    });\n    window.addEventListener('click', handleClick);\n    return () => window.removeEventListener('click', handleClick);\n  }, [contextMenu.position.x, contextMenu.position.y]);\n\n  // Trigger context menu on right click\n  const handleRightClick = (e, page) => {\n    e.preventDefault();\n    const x = e.clientX;\n    const y = e.clientY;\n    setContextMenu({\n      position: {\n        x,\n        y\n      },\n      toggled: true,\n      page: page\n    });\n  };\n\n  // Creates new page with current page as parent\n  const handleCreatePageClick = async page => {\n    // Route to CreatePage\n    // Save parent id\n    setNewMode(true);\n    setNewPageParentID(page._id);\n\n    // Update current page children\n    try {\n      const response = await fetch('/pages/' + editMode, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          children: [...page.children, page._id]\n        })\n      });\n      if (!response.ok) {\n        const errorJson = await response.json();\n        console.error('Error updating page:', errorJson);\n        return;\n      }\n      const updatedPage = await response.json();\n      dispatch({\n        type: 'UPDATE_PAGE',\n        payload: updatedPage\n      });\n      // setEditMode(null);\n      // setEditTitle('');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Changes to input, closes cm, and focuses input field when 'Rename Page' in context menu selected\n  const handleRenameClick = page => {\n    setEditMode(page._id);\n    setEditTitle(page.title);\n    setContextMenu({\n      ...contextMenu,\n      toggled: false\n    });\n    setTimeout(() => {\n      inputRef.current && inputRef.current.focus();\n    }, 0);\n  };\n\n  // Causes the blur and submit to happen at same time\n  const handleRenameSubmit = async e => {\n    if (e.key === 'Enter') {\n      inputRef.current && inputRef.current.blur(); // Trigger blur on Enter key\n    }\n  };\n\n  // Submits the rename to db and updates file, leaving input mode\n  const handleBlur = async () => {\n    try {\n      const response = await fetch('/pages/' + editMode, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: editTitle\n        })\n      });\n      if (!response.ok) {\n        const errorJson = await response.json();\n        console.error('Error updating page:', errorJson);\n        return;\n      }\n      const updatedPage = await response.json();\n      dispatch({\n        type: 'UPDATE_PAGE',\n        payload: updatedPage\n      });\n      setEditMode(null);\n      setEditTitle('');\n    } catch (err) {\n      console.error('Failed to update page:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: '/page/home',\n        className: \"text\",\n        children: \"LMNT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      className: \"create-page-button sidebar-item\",\n      to: '/page/new',\n      children: \"Create Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), pages && pages.map(page => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-item\",\n      onContextMenu: e => handleRightClick(e, page),\n      children: [editMode === page._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef // Attach the ref to the input\n        ,\n        className: \"rename-input\",\n        type: \"text\",\n        value: editTitle,\n        onChange: e => setEditTitle(e.target.value),\n        onKeyDown: handleRenameSubmit,\n        onBlur: handleBlur,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"page-link\",\n        to: '/page/' + page._id,\n        children: page.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }, this), newMode && newPageParentID === page._id && /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"page-link\",\n        to: '/page/new',\n        children: \"New Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }, this)]\n    }, page._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }, this)), contextMenu.toggled && /*#__PURE__*/_jsxDEV(ContextMenu, {\n      isVisible: contextMenu.toggled,\n      position: contextMenu.position,\n      page: contextMenu.page,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"context-menu-button\",\n        onClick: () => handleCreatePageClick(contextMenu.page),\n        children: \"New Subpage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"context-menu-button\",\n        onClick: () => handleRenameClick(contextMenu.page),\n        children: \"Rename Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DeletePageButton, {\n        page: contextMenu.page,\n        className: \"context-menu-button\",\n        children: \"Delete Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(LeftSidebar, \"QcSy6ulPt8IP/M85hhKDwBHf+AU=\", false, function () {\n  return [usePagesContext];\n});\n_c = LeftSidebar;\nexport default LeftSidebar;\nvar _c;\n$RefreshReg$(_c, \"LeftSidebar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","usePagesContext","NavLink","ContextMenu","DeletePageButton","jsxDEV","_jsxDEV","LeftSidebar","_s","pages","dispatch","contextMenu","setContextMenu","position","x","y","toggled","page","editMode","setEditMode","editTitle","setEditTitle","inputRef","newMode","setNewMode","newPageParentID","setNewPageParentID","handleClick","window","addEventListener","removeEventListener","handleRightClick","e","preventDefault","clientX","clientY","handleCreatePageClick","_id","response","fetch","method","headers","body","JSON","stringify","children","ok","errorJson","json","console","error","updatedPage","type","payload","err","log","handleRenameClick","title","setTimeout","current","focus","handleRenameSubmit","key","blur","handleBlur","className","to","fileName","_jsxFileName","lineNumber","columnNumber","map","onContextMenu","ref","value","onChange","target","onKeyDown","onBlur","autoFocus","isVisible","onClick","_c","$RefreshReg$"],"sources":["D:/Personal Projects/LMNT/frontend/src/components/LeftSidebar.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '../styles/LeftSidebar.css';\r\nimport { usePagesContext } from '../hooks/usePagesContext';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// components\r\nimport ContextMenu from './ContextMenu';\r\nimport DeletePageButton from './DeletePageButton';\r\n\r\n// Sidebar to LMNT, displays list of pages, create page option, logo, etc\r\n// TODO: Make collapsible and adjustable\r\nconst LeftSidebar = () => {\r\n  const { pages, dispatch } = usePagesContext();\r\n  const [contextMenu, setContextMenu] = useState({\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n    },\r\n    toggled: false,\r\n    page: null\r\n  });\r\n  const [editMode, setEditMode] = useState(null); // State to track edit mode\r\n  const [editTitle, setEditTitle] = useState(''); // State to track the input value\r\n  const inputRef = useRef(null); // Ref to access the input element\r\n  const [newMode, setNewMode] = useState(null);\r\n  const [newPageParentID, setNewPageParentID] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleClick = () => setContextMenu({\r\n        position: {\r\n            x: contextMenu.position.x,\r\n            y: contextMenu.position.y,\r\n        },\r\n        toggled: false,\r\n        page: null\r\n    });\r\n    window.addEventListener('click', handleClick);\r\n    return () => window.removeEventListener('click', handleClick);\r\n  }, [contextMenu.position.x, contextMenu.position.y]);\r\n\r\n  // Trigger context menu on right click\r\n  const handleRightClick = (e, page) => {\r\n    e.preventDefault();\r\n    const x = e.clientX;\r\n    const y = e.clientY;\r\n    setContextMenu({\r\n        position: {\r\n            x,\r\n            y,\r\n        },\r\n        toggled: true,\r\n        page: page\r\n    });\r\n  };\r\n\r\n  // Creates new page with current page as parent\r\n  const handleCreatePageClick = async (page) => {\r\n    // Route to CreatePage\r\n    // Save parent id\r\n    setNewMode(true);\r\n    setNewPageParentID(page._id)\r\n\r\n    // Update current page children\r\n    try {\r\n      const response = await fetch('/pages/' + editMode, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ children: [...page.children, page._id] })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorJson = await response.json();\r\n        console.error('Error updating page:', errorJson);\r\n        return;\r\n      }\r\n\r\n      const updatedPage = await response.json();\r\n      dispatch({ type: 'UPDATE_PAGE', payload: updatedPage });\r\n      // setEditMode(null);\r\n      // setEditTitle('');\r\n    } catch (err) {\r\n      console.log(err)\r\n\r\n    }\r\n  }\r\n\r\n  // Changes to input, closes cm, and focuses input field when 'Rename Page' in context menu selected\r\n  const handleRenameClick = (page) => {\r\n    setEditMode(page._id);\r\n    setEditTitle(page.title);\r\n    setContextMenu({ ...contextMenu, toggled: false });\r\n    setTimeout(() => {\r\n      inputRef.current && inputRef.current.focus();\r\n    }, 0);\r\n  };\r\n\r\n  // Causes the blur and submit to happen at same time\r\n  const handleRenameSubmit = async (e) => {\r\n    if (e.key === 'Enter') {\r\n      inputRef.current && inputRef.current.blur(); // Trigger blur on Enter key\r\n    }\r\n  };\r\n\r\n  // Submits the rename to db and updates file, leaving input mode\r\n  const handleBlur = async () => {\r\n    try {\r\n      const response = await fetch('/pages/' + editMode, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ title: editTitle })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorJson = await response.json();\r\n        console.error('Error updating page:', errorJson);\r\n        return;\r\n      }\r\n\r\n      const updatedPage = await response.json();\r\n      dispatch({ type: 'UPDATE_PAGE', payload: updatedPage });\r\n      setEditMode(null);\r\n      setEditTitle('');\r\n    } catch (err) {\r\n      console.error('Failed to update page:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n        {/* LMNT Logo */}\r\n        <div className=\"logo\">\r\n            <NavLink to={'/page/home'} className=\"text\">LMNT</NavLink>\r\n        </div>\r\n        <NavLink className=\"create-page-button sidebar-item\" to={'/page/new'}>Create Page</NavLink>\r\n        \r\n        {/* Lists the pages in db */}\r\n        {pages && pages.map((page) => (\r\n          <div key={page._id} className=\"sidebar-item\" onContextMenu={(e) => handleRightClick(e, page)}>\r\n            {/* If renaming, display input, otherwise link to page */}\r\n            {editMode === page._id ? (\r\n              <input\r\n                ref={inputRef} // Attach the ref to the input\r\n                className=\"rename-input\"\r\n                type=\"text\"\r\n                value={editTitle}\r\n                onChange={(e) => setEditTitle(e.target.value)}\r\n                onKeyDown={handleRenameSubmit}\r\n                onBlur={handleBlur}\r\n                autoFocus\r\n              />\r\n            ) : (\r\n              <NavLink className=\"page-link\" to={'/page/' + page._id}>\r\n                {page.title}\r\n              </NavLink>\r\n            )}\r\n            {/* If creating new file, link to new page */}\r\n            {newMode && newPageParentID === page._id &&\r\n              <NavLink className=\"page-link\" to={'/page/new'}>\r\n                New Page\r\n              </NavLink>\r\n            }\r\n          </div>\r\n        ))}\r\n\r\n        {/* Context menu details */}\r\n        {contextMenu.toggled && (\r\n          <ContextMenu \r\n            isVisible={contextMenu.toggled}\r\n            position={contextMenu.position}\r\n            page={contextMenu.page}\r\n          >\r\n            {/* Create new page */} \r\n            <button className=\"context-menu-button\" onClick={() => handleCreatePageClick(contextMenu.page)}>New Subpage</button> \r\n            {/* Rename current page */}\r\n            <button className=\"context-menu-button\" onClick={() => handleRenameClick(contextMenu.page)}>Rename Page</button>\r\n            {/* Delete current page */}\r\n            <DeletePageButton page={contextMenu.page} className=\"context-menu-button\">Delete Page</DeletePageButton>\r\n          </ContextMenu>\r\n        )}\r\n    </div>    \r\n  );\r\n};\r\n\r\nexport default LeftSidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}