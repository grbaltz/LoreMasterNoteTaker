{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\LMNT\\\\frontend\\\\src\\\\components\\\\LeftSidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/LeftSidebar.css';\nimport { usePagesContext } from '../hooks/usePagesContext';\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\n\n/* Contains the list of pages available on the left side, from their highest level\r\n    and sortable. To be created:\r\n\r\n    Framework\r\n    Create section/folder (not a page, just a sortation tool)\r\n        Creating a section will create a button with a label that expands all pages\r\n        stored in said section\r\n        Section Page (as mentioned below) will allow for a folder as well a front page for\r\n        the pages in the section, such as a country and then all of its city pages\r\n        listed below\r\n    Create section page (potentially add \"section: boolean\" to Page.js)\r\n    Dropdown for each section\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftSidebar = () => {\n  _s();\n  const {\n    pages\n  } = usePagesContext();\n  const handleRightClick = e => {\n    console.log('right clicked');\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: '/page/home',\n        className: \"text\",\n        children: \"LMNT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      className: \"create-page-button\",\n      to: '/page/new',\n      children: \"Create Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), pages && pages.map(page => /*#__PURE__*/_jsxDEV(NavLink, {\n      onContextMenu: handleRightClick,\n      className: \"page-link\",\n      to: '/page/' + page._id,\n      children: page.title\n    }, page._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n_s(LeftSidebar, \"Y1deAx+L8c+hsp5vmZKWE4eAmFM=\", false, function () {\n  return [usePagesContext];\n});\n_c = LeftSidebar;\nexport default LeftSidebar;\nvar _c;\n$RefreshReg$(_c, \"LeftSidebar\");","map":{"version":3,"names":["React","useState","usePagesContext","NavLink","Outlet","useParams","jsxDEV","_jsxDEV","LeftSidebar","_s","pages","handleRightClick","e","console","log","preventDefault","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","map","page","onContextMenu","_id","title","_c","$RefreshReg$"],"sources":["D:/Personal Projects/LMNT/frontend/src/components/LeftSidebar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/LeftSidebar.css';\r\nimport { usePagesContext } from '../hooks/usePagesContext';\r\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\r\n\r\n/* Contains the list of pages available on the left side, from their highest level\r\n    and sortable. To be created:\r\n\r\n    Framework\r\n    Create section/folder (not a page, just a sortation tool)\r\n        Creating a section will create a button with a label that expands all pages\r\n        stored in said section\r\n        Section Page (as mentioned below) will allow for a folder as well a front page for\r\n        the pages in the section, such as a country and then all of its city pages\r\n        listed below\r\n    Create section page (potentially add \"section: boolean\" to Page.js)\r\n    Dropdown for each section\r\n*/\r\n\r\nconst LeftSidebar = () => {\r\n  const { pages } = usePagesContext();\r\n\r\n  const handleRightClick = (e) => {\r\n    console.log('right clicked')\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n      <div className=\"sidebar-container\">\r\n          <div className=\"logo\">\r\n              <NavLink to={'/page/home'} className=\"text\">LMNT</NavLink>\r\n          </div>\r\n          <NavLink className=\"create-page-button\" to={'/page/new'}>Create Page</NavLink>\r\n          {pages && pages.map((page) => (\r\n              <NavLink onContextMenu={handleRightClick} className=\"page-link\" key={page._id} to={'/page/' + page._id}>\r\n                  {page.title}\r\n              </NavLink>\r\n          ))}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default LeftSidebar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,2BAA2B;AAClC,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,kBAAkB;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,SAAAC,MAAA,IAAAC,OAAA;AAcA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAM,CAAC,GAAGR,eAAe,CAAC,CAAC;EAEnC,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BF,CAAC,CAACG,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,oBACIR,OAAA;IAAKS,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BV,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBV,OAAA,CAACJ,OAAO;QAACe,EAAE,EAAE,YAAa;QAACF,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACNf,OAAA,CAACJ,OAAO;MAACa,SAAS,EAAC,oBAAoB;MAACE,EAAE,EAAE,WAAY;MAAAD,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EAC7EZ,KAAK,IAAIA,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACrBjB,OAAA,CAACJ,OAAO;MAACsB,aAAa,EAAEd,gBAAiB;MAACK,SAAS,EAAC,WAAW;MAAgBE,EAAE,EAAE,QAAQ,GAAGM,IAAI,CAACE,GAAI;MAAAT,QAAA,EAClGO,IAAI,CAACG;IAAK,GADsDH,IAAI,CAACE,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpE,CACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAACb,EAAA,CArBID,WAAW;EAAA,QACGN,eAAe;AAAA;AAAA0B,EAAA,GAD7BpB,WAAW;AAuBjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}