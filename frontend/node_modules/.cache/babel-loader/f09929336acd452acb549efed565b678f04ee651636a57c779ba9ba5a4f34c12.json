{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\LMNT\\\\frontend\\\\src\\\\components\\\\LeftSidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport '../styles/LeftSidebar.css';\nimport { usePagesContext } from '../hooks/usePagesContext';\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\n\n// components\nimport Menu from '../components/Menu';\n\n/* Contains the list of pages available on the left side, from their highest level\r\n    and sortable. To be created:\r\n\r\n    Framework\r\n    Create section/folder (not a page, just a sortation tool)\r\n        Creating a section will create a button with a label that expands all pages\r\n        stored in said section\r\n        Section Page (as mentioned below) will allow for a folder as well a front page for\r\n        the pages in the section, such as a country and then all of its city pages\r\n        listed below\r\n    Create section page (potentially add \"section: boolean\" to Page.js)\r\n    Dropdown for each section\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftSidebar = () => {\n  _s();\n  const {\n    pages\n  } = usePagesContext();\n  const contextMenuRef = useRef(null);\n  const [contextMenu, setContextMenu] = useState({\n    position: {\n      x: 0,\n      y: 0\n    },\n    toggled: false\n  });\n  const handleRightClick = (e, page) => {\n    var _window;\n    console.log('right clicked');\n    e.preventDefault();\n    const contextMenuAttr = contextMenuRef.current.getBoundingClientRect();\n    const isLeft = e.clientX < ((_window = window) === null || _window === void 0 ? void 0 : _window.innerWidth) / 2;\n    let x;\n    let y = e.clientY;\n    if (isLeft) {\n      x = e.clientX;\n    } else {\n      x = e.clientX - contextMenuAttr.width;\n    }\n    setContextMenu({\n      position: {\n        x,\n        y\n      },\n      toggled: true\n    });\n    console.log(contextMenuAttr);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: '/page/home',\n        className: \"text\",\n        children: \"LMNT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      className: \"create-page-button\",\n      to: '/page/new',\n      children: \"Create Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), pages && pages.map(page => /*#__PURE__*/_jsxDEV(\"text\", {\n      onContextMenu: handleRightClick,\n      children: page.title\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n    // <NavLink className=\"page-link\" key={page._id} to={'/page/' + page._id}>\n    //     {page.title}\n    // </NavLink>\n    ), /*#__PURE__*/_jsxDEV(Menu, {\n      contextMenuRef: contextMenuRef,\n      isToggled: contextMenu.toggled,\n      positionX: contextMenu.position.x,\n      positionY: contextMenu.position.y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(LeftSidebar, \"+sXrKPXeUY8wThfde8ShHI9xJWU=\", false, function () {\n  return [usePagesContext];\n});\n_c = LeftSidebar;\nexport default LeftSidebar;\nvar _c;\n$RefreshReg$(_c, \"LeftSidebar\");","map":{"version":3,"names":["React","useState","useRef","usePagesContext","NavLink","Outlet","useParams","Menu","jsxDEV","_jsxDEV","LeftSidebar","_s","pages","contextMenuRef","contextMenu","setContextMenu","position","x","y","toggled","handleRightClick","e","page","_window","console","log","preventDefault","contextMenuAttr","current","getBoundingClientRect","isLeft","clientX","window","innerWidth","clientY","width","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","map","onContextMenu","title","isToggled","positionX","positionY","_c","$RefreshReg$"],"sources":["D:/Personal Projects/LMNT/frontend/src/components/LeftSidebar.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport '../styles/LeftSidebar.css';\r\nimport { usePagesContext } from '../hooks/usePagesContext';\r\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\r\n\r\n// components\r\nimport Menu from '../components/Menu';\r\n\r\n/* Contains the list of pages available on the left side, from their highest level\r\n    and sortable. To be created:\r\n\r\n    Framework\r\n    Create section/folder (not a page, just a sortation tool)\r\n        Creating a section will create a button with a label that expands all pages\r\n        stored in said section\r\n        Section Page (as mentioned below) will allow for a folder as well a front page for\r\n        the pages in the section, such as a country and then all of its city pages\r\n        listed below\r\n    Create section page (potentially add \"section: boolean\" to Page.js)\r\n    Dropdown for each section\r\n*/\r\n\r\nconst LeftSidebar = () => {\r\n  const { pages } = usePagesContext();\r\n  const contextMenuRef = useRef(null);\r\n  const [contextMenu, setContextMenu] = useState({\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n    },\r\n    toggled: false\r\n  })\r\n\r\n  const handleRightClick = (e, page) => {\r\n    console.log('right clicked')\r\n    e.preventDefault()\r\n\r\n    const contextMenuAttr = contextMenuRef.current.getBoundingClientRect()\r\n\r\n    const isLeft = e.clientX < window?.innerWidth / 2\r\n\r\n    let x\r\n    let y = e.clientY\r\n\r\n    if (isLeft) {\r\n        x = e.clientX\r\n    } else {\r\n        x = e.clientX - contextMenuAttr.width\r\n    }\r\n\r\n    setContextMenu({\r\n        position: {\r\n            x,\r\n            y,\r\n        },\r\n        toggled: true\r\n    })\r\n\r\n    console.log(contextMenuAttr)\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n        <div className=\"logo\">\r\n            <NavLink to={'/page/home'} className=\"text\">LMNT</NavLink>\r\n        </div>\r\n        <NavLink className=\"create-page-button\" to={'/page/new'}>Create Page</NavLink>\r\n        {pages && pages.map((page) => (\r\n            <text onContextMenu={handleRightClick} key={page}>{page.title}</text>\r\n            // <NavLink className=\"page-link\" key={page._id} to={'/page/' + page._id}>\r\n            //     {page.title}\r\n            // </NavLink>\r\n        ))}\r\n        <Menu \r\n            contextMenuRef={contextMenuRef}\r\n            isToggled={contextMenu.toggled}\r\n            positionX={contextMenu.position.x}\r\n            positionY={contextMenu.position.y}\r\n        />\r\n    </div>    \r\n  );\r\n};\r\n\r\nexport default LeftSidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}