{"ast":null,"code":"var _jsxFileName = \"/home/grbaltz/LoreMasterNoteTaker/LoreMasterNoteTaker/frontend/src/components/PageContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/PageContent.css';\nimport CommandHandler from '../handlers/CommandHandler';\nimport { PagesContext } from '../contexts/PagesContext'; // Update this path to your actual context file\nimport * as api from '../api'; // Import the function\n\n// Components\nimport TextEditor from './TextEditor';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageContent = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    pages,\n    dispatch\n  } = useContext(PagesContext);\n  const [input, setInput] = useState('');\n  const [error, setError] = useState(null);\n  const editorRef = useRef(null);\n  const handleInputChange = async e => {\n    const newContent = e.target.value;\n    setInput(newContent);\n    try {\n      await api.updatePageContent(id, newContent, dispatch);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  useEffect(() => {\n    console.log(\"Loading page\");\n    const fetchContent = async () => {\n      try {\n        setInput(await api.fetchPageContent(id));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchContent();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextEditor, {\n      ref: editorRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommandHandler, {\n      input: input,\n      setInput: setInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true);\n};\n_s(PageContent, \"kKnUFSDyOmJB148YR07405LERrk=\", false, function () {\n  return [useParams];\n});\n_c = PageContent;\nexport default PageContent;\nvar _c;\n$RefreshReg$(_c, \"PageContent\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","useParams","CommandHandler","PagesContext","api","TextEditor","jsxDEV","_jsxDEV","Fragment","_Fragment","PageContent","_s","id","pages","dispatch","input","setInput","error","setError","editorRef","handleInputChange","e","newContent","target","value","updatePageContent","err","message","console","log","fetchContent","fetchPageContent","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/grbaltz/LoreMasterNoteTaker/LoreMasterNoteTaker/frontend/src/components/PageContent.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/PageContent.css';\nimport CommandHandler from '../handlers/CommandHandler';\nimport { PagesContext } from '../contexts/PagesContext'; // Update this path to your actual context file\nimport * as api from '../api'; // Import the function\n\n// Components\nimport TextEditor from './TextEditor';\n\nconst PageContent = () => {\n  const { id } = useParams();\n  const { pages, dispatch } = useContext(PagesContext);\n  const [input, setInput] = useState('');\n  const [error, setError] = useState(null);\n  const editorRef = useRef(null);\n\n  const handleInputChange = async (e) => {\n    const newContent = e.target.value;\n    setInput(newContent);\n  \n    try {\n      await api.updatePageContent(id, newContent, dispatch);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Loading page\")\n    const fetchContent = async () => {\n      try {\n        setInput(await api.fetchPageContent(id));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    \n    fetchContent();\n  }, [id]);\n\n  return (\n    <>\n      <TextEditor ref={editorRef} />\n      <CommandHandler input={input} setInput={setInput} />\n      {error && <p className=\"error-message\">{error}</p>} {/* Display error message */}\n    </>\n  );\n};\n\nexport default PageContent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACtE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,2BAA2B;AAClC,OAAOC,cAAc,MAAM,4BAA4B;AACvD,SAASC,YAAY,QAAQ,0BAA0B,CAAC,CAAC;AACzD,OAAO,KAAKC,GAAG,MAAM,QAAQ,CAAC,CAAC;;AAE/B;AACA,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAM;IAAEY,KAAK;IAAEC;EAAS,CAAC,GAAGf,UAAU,CAACI,YAAY,CAAC;EACpD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMsB,SAAS,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMoB,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrC,MAAMC,UAAU,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACjCR,QAAQ,CAACM,UAAU,CAAC;IAEpB,IAAI;MACF,MAAMlB,GAAG,CAACqB,iBAAiB,CAACb,EAAE,EAAEU,UAAU,EAAER,QAAQ,CAAC;IACvD,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACd8B,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFd,QAAQ,CAAC,MAAMZ,GAAG,CAAC2B,gBAAgB,CAACnB,EAAE,CAAC,CAAC;MAC1C,CAAC,CAAC,OAAOc,GAAG,EAAE;QACZE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAClB;IACF,CAAC;IAEDI,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAAClB,EAAE,CAAC,CAAC;EAER,oBACEL,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA,CAACF,UAAU;MAAC4B,GAAG,EAAEd;IAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9B9B,OAAA,CAACL,cAAc;MAACa,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnDpB,KAAK,iBAAIV,OAAA;MAAG+B,SAAS,EAAC,eAAe;MAAAN,QAAA,EAAEf;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC;EAAA,eACpD,CAAC;AAEP,CAAC;AAAC1B,EAAA,CAtCID,WAAW;EAAA,QACAT,SAAS;AAAA;AAAAsC,EAAA,GADpB7B,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}