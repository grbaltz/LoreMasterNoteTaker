{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\LMNT\\\\frontend\\\\src\\\\components\\\\LeftSidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/LeftSidebar.css';\nimport { usePagesContext } from '../hooks/usePagesContext';\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\n\n/* Contains the list of pages available on the left side, from their highest level\r\n    and sortable. To be created:\r\n\r\n    Framework\r\n    Create section/folder (not a page, just a sortation tool)\r\n        Creating a section will create a button with a label that expands all pages\r\n        stored in said section\r\n        Section Page (as mentioned below) will allow for a folder as well a front page for\r\n        the pages in the section, such as a country and then all of its city pages\r\n        listed below\r\n    Create section page (potentially add \"section: boolean\" to Page.js)\r\n    Dropdown for each section\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftSidebar = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    pages,\n    dispatch\n  } = usePagesContext();\n  const handleClick = ({\n    page\n  }) => {\n    console.log('clicked on page:', page.title);\n  };\n  const handleCreatePage = () => {\n    // change the current page to the Create Page page\n    console.log('tried to navigate to Create Page page');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-page-button\",\n      onClick: handleCreatePage,\n      children: \"Create Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), pages && pages.map((page, index) => /*#__PURE__*/_jsxDEV(NavLink, {\n      to: 'pages/${page._id}',\n      children: page.title\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(LeftSidebar, \"PlPGn3MSUFKwpU7uNEezyRcLdt4=\", false, function () {\n  return [useParams, usePagesContext];\n});\n_c = LeftSidebar;\nexport default LeftSidebar;\nvar _c;\n$RefreshReg$(_c, \"LeftSidebar\");","map":{"version":3,"names":["React","useState","usePagesContext","NavLink","Outlet","useParams","jsxDEV","_jsxDEV","LeftSidebar","_s","id","pages","dispatch","handleClick","page","console","log","title","handleCreatePage","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","to","_c","$RefreshReg$"],"sources":["D:/Personal Projects/LMNT/frontend/src/components/LeftSidebar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/LeftSidebar.css';\r\nimport { usePagesContext } from '../hooks/usePagesContext';\r\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\r\n\r\n/* Contains the list of pages available on the left side, from their highest level\r\n    and sortable. To be created:\r\n\r\n    Framework\r\n    Create section/folder (not a page, just a sortation tool)\r\n        Creating a section will create a button with a label that expands all pages\r\n        stored in said section\r\n        Section Page (as mentioned below) will allow for a folder as well a front page for\r\n        the pages in the section, such as a country and then all of its city pages\r\n        listed below\r\n    Create section page (potentially add \"section: boolean\" to Page.js)\r\n    Dropdown for each section\r\n*/\r\n\r\nconst LeftSidebar = () => {\r\n    const { id } = useParams();\r\n    const {pages, dispatch} = usePagesContext();\r\n\r\n    const handleClick = ({page}) => {\r\n        console.log('clicked on page:', page.title)\r\n    }\r\n\r\n    const handleCreatePage = () => {\r\n        // change the current page to the Create Page page\r\n        console.log('tried to navigate to Create Page page')\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar-container\">\r\n            <button className=\"create-page-button\" onClick={handleCreatePage}>Create Page</button>\r\n            {pages && pages.map((page, index) => (\r\n                <NavLink key={index} to={'pages/${page._id}'}>{page.title}</NavLink>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftSidebar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,2BAA2B;AAClC,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,kBAAkB;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,SAAAC,MAAA,IAAAC,OAAA;AAcA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM;IAACM,KAAK;IAAEC;EAAQ,CAAC,GAAGV,eAAe,CAAC,CAAC;EAE3C,MAAMW,WAAW,GAAGA,CAAC;IAACC;EAAI,CAAC,KAAK;IAC5BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAACG,KAAK,CAAC;EAC/C,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B;IACAH,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;EACxD,CAAC;EAED,oBACIT,OAAA;IAAKY,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9Bb,OAAA;MAAQY,SAAS,EAAC,oBAAoB;MAACE,OAAO,EAAEH,gBAAiB;MAAAE,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrFd,KAAK,IAAIA,KAAK,CAACe,GAAG,CAAC,CAACZ,IAAI,EAAEa,KAAK,kBAC5BpB,OAAA,CAACJ,OAAO;MAAayB,EAAE,EAAE,mBAAoB;MAAAR,QAAA,EAAEN,IAAI,CAACG;IAAK,GAA3CU,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgD,CACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAhB,EAAA,CArBKD,WAAW;EAAA,QACEH,SAAS,EACEH,eAAe;AAAA;AAAA2B,EAAA,GAFvCrB,WAAW;AAuBjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}