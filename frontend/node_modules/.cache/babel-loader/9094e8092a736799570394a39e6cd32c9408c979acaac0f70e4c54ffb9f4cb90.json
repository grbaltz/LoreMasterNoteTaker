{"ast":null,"code":"var _jsxFileName = \"/home/grbaltz/LoreMasterNoteTaker/frontend/src/components/PageContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/PageContent.css';\n\n// Components/Variables\nimport { commandsList } from './Commands';\n\n/* \n    Main space for where content/notes are written/stored for each page\n    Customizable with text editing, commands, formatting, and elements\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContent = () => {\n  _s();\n  const [content, setContent] = useState('');\n  const [expComm, setExpComm] = useState(false);\n  const [command, setCommand] = useState('');\n  const [ignoreKeys] = useState([\"Shift\", \"CapsLock\", \"Control\", \"Alt\"]);\n\n  // Handles commands\n  /*\n      Commands:\n      - Change heading size\n      - Insert table\n      - Insert image\n      - Roll from loot-table\n      - Dice roll\n      TODO\n  */\n  const handleKeyDown = e => {\n    let ta = document.getElementById('page-content');\n\n    // If '/', trigger command menu\n    if (e.key === '/') {\n      console.log('Command expected');\n      setExpComm(true);\n      setCommand('');\n      ta.value = ta.value.slice(0, -1);\n      return;\n    }\n\n    // If expecting a command (ExpComm), then save inputs until 'enter', 'tab', or submission\n    if (expComm) {\n      if (e.key === 'Enter' || e.key === 'Tab' || e.key === ' ') {\n        // TODO add submission criteria\n        // TODO Submit\n        const foundCommand = commandsList.find(e => e.name.includes(command));\n        if (foundCommand) {\n          e.preventDefault();\n          const comLength = foundCommand.name.length + 1;\n          setContent(content.slice(0, -comLength));\n          foundCommand.execute();\n        }\n        console.log('Command submitted: ' + command);\n        setCommand('');\n        setExpComm(false);\n        return;\n      } else if (e.key === 'Backspace') {\n        if (command.length > 0) {\n          setCommand(command.slice(0, -1));\n        } else {\n          // Exit command sequence\n          setCommand('');\n          setExpComm(false);\n          console.log('Exited command sequence');\n        }\n      } else if (ignoreKeys.includes(e.key)) {\n        console.log(\"Skipped key: \" + e.key);\n      } else {\n        setCommand(command + e.key);\n      }\n    }\n    if (command.length > 0) console.log(command);\n  };\n\n  // Updates content, affected by handleKeyDown\n  const handleChange = e => {\n    const newValue = e.target.value;\n    setContent(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [commandsList.map((c, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: c.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 46\n    }, this)), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"page-content\",\n      id: \"page-content\",\n      value: content,\n      onChange: handleChange,\n      className: \"page-content-container\",\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(PageContent, \"dUWT6Cd17udLj5UXpyigrHqcbbg=\");\n_c = PageContent;\nexport default PageContent;\nvar _c;\n$RefreshReg$(_c, \"PageContent\");","map":{"version":3,"names":["React","useState","commandsList","jsxDEV","_jsxDEV","PageContent","_s","content","setContent","expComm","setExpComm","command","setCommand","ignoreKeys","handleKeyDown","e","ta","document","getElementById","key","console","log","value","slice","foundCommand","find","name","includes","preventDefault","comLength","length","execute","handleChange","newValue","target","children","map","c","index","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","className","onKeyDown","_c","$RefreshReg$"],"sources":["/home/grbaltz/LoreMasterNoteTaker/frontend/src/components/PageContent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/PageContent.css';\n\n// Components/Variables\nimport { commandsList } from './Commands';\n\n/* \n    Main space for where content/notes are written/stored for each page\n    Customizable with text editing, commands, formatting, and elements\n*/\n\nconst PageContent = () => {\n    const [content, setContent] = useState('');\n    const [expComm, setExpComm] = useState(false);\n    const [command, setCommand] = useState('');\n    const [ignoreKeys] = useState([\"Shift\", \"CapsLock\", \"Control\", \"Alt\"]);\n    \n    // Handles commands\n    /*\n        Commands:\n        - Change heading size\n        - Insert table\n        - Insert image\n        - Roll from loot-table\n        - Dice roll\n        TODO\n    */\n    const handleKeyDown = (e) => {\n        let ta = document.getElementById('page-content');\n\n        // If '/', trigger command menu\n        if (e.key === '/') {\n            console.log('Command expected');\n            setExpComm(true);\n            setCommand('');\n            ta.value = ta.value.slice(0, -1);\n            return;\n        }\n\n        // If expecting a command (ExpComm), then save inputs until 'enter', 'tab', or submission\n        if (expComm) {\n            if (e.key === 'Enter' || e.key === 'Tab' || e.key === ' ') { // TODO add submission criteria\n                // TODO Submit\n                const foundCommand = commandsList.find(e => e.name.includes(command));\n                if (foundCommand) {\n                    e.preventDefault();\n                    const comLength = foundCommand.name.length + 1;\n                    setContent(content.slice(0, -comLength));\n                    foundCommand.execute();\n                }\n\n                console.log('Command submitted: ' + command);\n                setCommand('');\n                setExpComm(false);\n                return;\n            } else if (e.key === 'Backspace') {\n                if (command.length > 0) {\n                    setCommand(command.slice(0, -1));\n                } else {\n                    // Exit command sequence\n                    setCommand('');\n                    setExpComm(false);\n                    console.log('Exited command sequence');\n                }\n            } else if (ignoreKeys.includes(e.key)) {\n                console.log(\"Skipped key: \" + e.key);\n            } else {\n                setCommand(command + e.key);\n            }\n        }\n\n        if (command.length > 0) console.log(command);\n    }\n\n    // Updates content, affected by handleKeyDown\n    const handleChange = (e) => {\n        const newValue = e.target.value;\n        setContent(newValue);\n    }\n\n    return (\n        <div>\n            {commandsList.map((c, index) => (<li key={index}>{c.name}</li>))}\n            <textarea \n                name=\"page-content\" \n                id=\"page-content\" \n                value={content}\n                onChange={handleChange}\n                className=\"page-content-container\"\n                onKeyDown={handleKeyDown}\n            />\n        </div>\n        \n    );\n};\n\nexport default PageContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}