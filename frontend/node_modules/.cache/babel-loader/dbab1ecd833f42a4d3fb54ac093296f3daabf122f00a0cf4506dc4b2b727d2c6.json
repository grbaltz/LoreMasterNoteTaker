{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\LMNT\\\\frontend\\\\src\\\\components\\\\LeftSidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport '../styles/LeftSidebar.css';\nimport { usePagesContext } from '../hooks/usePagesContext';\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\n\n// components\nimport Menu from '../components/Menu';\n\n/* Contains the list of pages available on the left side, from their highest level\r\n    and sortable. To be created:\r\n\r\n    Framework\r\n    Create section/folder (not a page, just a sortation tool)\r\n        Creating a section will create a button with a label that expands all pages\r\n        stored in said section\r\n        Section Page (as mentioned below) will allow for a folder as well a front page for\r\n        the pages in the section, such as a country and then all of its city pages\r\n        listed below\r\n    Create section page (potentially add \"section: boolean\" to Page.js)\r\n    Dropdown for each section\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftSidebar = () => {\n  _s();\n  const {\n    pages\n  } = usePagesContext();\n  const contextMenuRef = useRef(null);\n  const [contextMenu, setContextMenu] = useState({\n    position: {\n      x: 0,\n      y: 0\n    },\n    toggled: false\n  });\n  const handleRightClick = e => {\n    console.log('right clicked');\n    e.preventDefault();\n    const contextMenuAttr = contextMenuRef.current.getBoundingClientRect();\n    console.log(contextMenuAttr);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: '/page/home',\n        className: \"text\",\n        children: \"LMNT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      className: \"create-page-button\",\n      to: '/page/new',\n      children: \"Create Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), pages && pages.map(page => /*#__PURE__*/_jsxDEV(NavLink, {\n      onContextMenu: handleRightClick,\n      className: \"page-link\",\n      to: '/page/' + page._id,\n      children: page.title\n    }, page._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this)), /*#__PURE__*/_jsxDEV(Menu, {\n      contextMenuRef: contextMenuRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_s(LeftSidebar, \"+sXrKPXeUY8wThfde8ShHI9xJWU=\", false, function () {\n  return [usePagesContext];\n});\n_c = LeftSidebar;\nexport default LeftSidebar;\nvar _c;\n$RefreshReg$(_c, \"LeftSidebar\");","map":{"version":3,"names":["React","useState","useRef","usePagesContext","NavLink","Outlet","useParams","Menu","jsxDEV","_jsxDEV","LeftSidebar","_s","pages","contextMenuRef","contextMenu","setContextMenu","position","x","y","toggled","handleRightClick","e","console","log","preventDefault","contextMenuAttr","current","getBoundingClientRect","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","map","page","onContextMenu","_id","title","_c","$RefreshReg$"],"sources":["D:/Personal Projects/LMNT/frontend/src/components/LeftSidebar.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport '../styles/LeftSidebar.css';\r\nimport { usePagesContext } from '../hooks/usePagesContext';\r\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\r\n\r\n// components\r\nimport Menu from '../components/Menu';\r\n\r\n/* Contains the list of pages available on the left side, from their highest level\r\n    and sortable. To be created:\r\n\r\n    Framework\r\n    Create section/folder (not a page, just a sortation tool)\r\n        Creating a section will create a button with a label that expands all pages\r\n        stored in said section\r\n        Section Page (as mentioned below) will allow for a folder as well a front page for\r\n        the pages in the section, such as a country and then all of its city pages\r\n        listed below\r\n    Create section page (potentially add \"section: boolean\" to Page.js)\r\n    Dropdown for each section\r\n*/\r\n\r\nconst LeftSidebar = () => {\r\n  const { pages } = usePagesContext();\r\n  const contextMenuRef = useRef(null);\r\n  const [contextMenu, setContextMenu] = useState({\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n    },\r\n    toggled: false\r\n  })\r\n\r\n  const handleRightClick = (e) => {\r\n    console.log('right clicked')\r\n    e.preventDefault()\r\n\r\n    const contextMenuAttr = contextMenuRef.current.getBoundingClientRect()\r\n\r\n    console.log(contextMenuAttr)\r\n  }\r\n\r\n  return (\r\n      <div className=\"sidebar-container\">\r\n          <div className=\"logo\">\r\n              <NavLink to={'/page/home'} className=\"text\">LMNT</NavLink>\r\n          </div>\r\n          <NavLink className=\"create-page-button\" to={'/page/new'}>Create Page</NavLink>\r\n          {pages && pages.map((page) => (\r\n              <NavLink onContextMenu={handleRightClick} className=\"page-link\" key={page._id} to={'/page/' + page._id}>\r\n                  {page.title}\r\n              </NavLink>\r\n          ))}\r\n          <Menu contextMenuRef={contextMenuRef}/>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default LeftSidebar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,2BAA2B;AAClC,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,kBAAkB;;AAE7D;AACA,OAAOC,IAAI,MAAM,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,SAAAC,MAAA,IAAAC,OAAA;AAcA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAM,CAAC,GAAGT,eAAe,CAAC,CAAC;EACnC,MAAMU,cAAc,GAAGX,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC;IAC7Ce,QAAQ,EAAE;MACNC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;IACP,CAAC;IACDC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BF,CAAC,CAACG,cAAc,CAAC,CAAC;IAElB,MAAMC,eAAe,GAAGZ,cAAc,CAACa,OAAO,CAACC,qBAAqB,CAAC,CAAC;IAEtEL,OAAO,CAACC,GAAG,CAACE,eAAe,CAAC;EAC9B,CAAC;EAED,oBACIhB,OAAA;IAAKmB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BpB,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBpB,OAAA,CAACL,OAAO;QAAC0B,EAAE,EAAE,YAAa;QAACF,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACNzB,OAAA,CAACL,OAAO;MAACwB,SAAS,EAAC,oBAAoB;MAACE,EAAE,EAAE,WAAY;MAAAD,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EAC7EtB,KAAK,IAAIA,KAAK,CAACuB,GAAG,CAAEC,IAAI,iBACrB3B,OAAA,CAACL,OAAO;MAACiC,aAAa,EAAEjB,gBAAiB;MAACQ,SAAS,EAAC,WAAW;MAAgBE,EAAE,EAAE,QAAQ,GAAGM,IAAI,CAACE,GAAI;MAAAT,QAAA,EAClGO,IAAI,CAACG;IAAK,GADsDH,IAAI,CAACE,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpE,CACZ,CAAC,eACFzB,OAAA,CAACF,IAAI;MAACM,cAAc,EAAEA;IAAe;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEZ,CAAC;AAACvB,EAAA,CAlCID,WAAW;EAAA,QACGP,eAAe;AAAA;AAAAqC,EAAA,GAD7B9B,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}