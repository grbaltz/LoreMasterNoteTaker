{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\LMNT\\\\frontend\\\\src\\\\components\\\\LeftSidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/LeftSidebar.css';\nimport { usePagesContext } from '../hooks/usePagesContext';\nimport { NavLink, useNavigate } from 'react-router-dom';\n\n// components\nimport ContextMenu from './ContextMenu';\nimport DeletePageButton from './DeletePageButton';\nimport PageListElem from './PageListElem';\n\n// Sidebar to LMNT, displays list of pages, create page option, logo, etc\n// TODO: Make collapsible and adjustable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftSidebar = () => {\n  _s();\n  const {\n    pages,\n    dispatch\n  } = usePagesContext();\n  const [contextMenu, setContextMenu] = useState({\n    position: {\n      x: 0,\n      y: 0\n    },\n    toggled: false,\n    page: null\n  });\n  const [editMode, setEditMode] = useState(null); // State to track edit mode\n  const [editTitle, setEditTitle] = useState(''); // State to track the input value\n  const inputRef = useRef(null); // Ref to access the input element\n  const [newMode, setNewMode] = useState(null);\n  const [newPageParentID, setNewPageParentID] = useState(null);\n  const navigate = useNavigate();\n  const [expandedPages, setExpandedPages] = useState([]);\n  const [dropdownStatus, setDropdownStatus] = useState(false);\n  useEffect(() => {\n    const handleClick = () => setContextMenu({\n      position: {\n        x: contextMenu.position.x,\n        y: contextMenu.position.y\n      },\n      toggled: false,\n      page: null\n    });\n    window.addEventListener('click', handleClick);\n    return () => window.removeEventListener('click', handleClick);\n  }, [contextMenu.position.x, contextMenu.position.y]);\n\n  // Trigger context menu on right click\n  const handleRightClick = (e, page) => {\n    e.preventDefault();\n    console.log(page.title + \" clicked on\");\n    const x = e.clientX;\n    const y = e.clientY;\n    setContextMenu({\n      position: {\n        x,\n        y\n      },\n      toggled: true,\n      page: page\n    });\n  };\n\n  // Creates new page with current page as parent\n  const handleCreatePageClick = async page => {\n    // Route to CreatePage\n    // Save parent id\n    setNewMode(true);\n    setNewPageParentID(page._id);\n    navigate('/page/new', {\n      state: {\n        parentId: page._id\n      }\n    });\n  };\n\n  // Toggles the value of the page dropdown element\n  const toggleExpand = pageId => {\n    setExpandedPages(prevState => prevState.includes(pageId) ? prevState.filter(id => id !== pageId) : [...prevState, pageId]);\n  };\n\n  // Changes to input, closes cm, and focuses input field when 'Rename Page' in context menu selected\n  const handleRenameClick = page => {\n    setEditMode(page._id);\n    setEditTitle(page.title);\n    setContextMenu({\n      ...contextMenu,\n      toggled: false\n    });\n    setTimeout(() => {\n      inputRef.current && inputRef.current.focus();\n    }, 0);\n  };\n\n  // Causes the blur and submit to happen at same time\n  const handleRenameSubmit = async e => {\n    if (e.key === 'Enter') {\n      inputRef.current && inputRef.current.blur(); // Trigger blur on Enter key\n    }\n  };\n\n  // Submits the rename to db and updates file, leaving input mode\n  const handleBlur = async () => {\n    try {\n      const response = await fetch('/pages/' + editMode, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: editTitle\n        })\n      });\n      if (!response.ok) {\n        const errorJson = await response.json();\n        console.error('Error updating page:', errorJson);\n        return;\n      }\n      const updatedPage = await response.json();\n      dispatch({\n        type: 'UPDATE_PAGE',\n        payload: updatedPage\n      });\n      setEditMode(null);\n      setEditTitle('');\n    } catch (err) {\n      console.error('Failed to update page:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: '/page/home',\n        className: \"text\",\n        children: \"LMNT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      className: \"create-page-button sidebar-item\",\n      to: '/page/new',\n      children: \"Create Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), pages && pages.map(page => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-item\",\n      children: editMode === page._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef // Attach the ref to the input\n        ,\n        className: \"rename-input\",\n        type: \"text\",\n        value: editTitle,\n        onChange: e => setEditTitle(e.target.value),\n        onKeyDown: handleRenameSubmit,\n        onBlur: handleBlur,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(PageListElem, {\n        page: page,\n        level: 0,\n        toggleExpand: toggleExpand,\n        expandedPages: expandedPages,\n        onContextMenu: handleRightClick\n      }, page._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }, this)\n    }, page._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this)), contextMenu.toggled && /*#__PURE__*/_jsxDEV(ContextMenu, {\n      isVisible: contextMenu.toggled,\n      position: contextMenu.position,\n      page: contextMenu.page,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"context-menu-button\",\n        onClick: () => handleCreatePageClick(contextMenu.page),\n        children: \"New Subpage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"context-menu-button\",\n        onClick: () => handleRenameClick(contextMenu.page),\n        children: \"Rename Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DeletePageButton, {\n        page: contextMenu.page,\n        className: \"context-menu-button\",\n        children: \"Delete Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(LeftSidebar, \"4pdVbFLkG6DbmhEdt7pkdfRou30=\", false, function () {\n  return [usePagesContext, useNavigate];\n});\n_c = LeftSidebar;\nexport default LeftSidebar;\nvar _c;\n$RefreshReg$(_c, \"LeftSidebar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","usePagesContext","NavLink","useNavigate","ContextMenu","DeletePageButton","PageListElem","jsxDEV","_jsxDEV","LeftSidebar","_s","pages","dispatch","contextMenu","setContextMenu","position","x","y","toggled","page","editMode","setEditMode","editTitle","setEditTitle","inputRef","newMode","setNewMode","newPageParentID","setNewPageParentID","navigate","expandedPages","setExpandedPages","dropdownStatus","setDropdownStatus","handleClick","window","addEventListener","removeEventListener","handleRightClick","e","preventDefault","console","log","title","clientX","clientY","handleCreatePageClick","_id","state","parentId","toggleExpand","pageId","prevState","includes","filter","id","handleRenameClick","setTimeout","current","focus","handleRenameSubmit","key","blur","handleBlur","response","fetch","method","headers","body","JSON","stringify","ok","errorJson","json","error","updatedPage","type","payload","err","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","map","ref","value","onChange","target","onKeyDown","onBlur","autoFocus","level","onContextMenu","isVisible","onClick","_c","$RefreshReg$"],"sources":["D:/Personal Projects/LMNT/frontend/src/components/LeftSidebar.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '../styles/LeftSidebar.css';\r\nimport { usePagesContext } from '../hooks/usePagesContext';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\n\r\n// components\r\nimport ContextMenu from './ContextMenu';\r\nimport DeletePageButton from './DeletePageButton';\r\nimport PageListElem from './PageListElem';\r\n\r\n// Sidebar to LMNT, displays list of pages, create page option, logo, etc\r\n// TODO: Make collapsible and adjustable\r\nconst LeftSidebar = () => {\r\n  const { pages, dispatch } = usePagesContext();\r\n  const [contextMenu, setContextMenu] = useState({\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n    },\r\n    toggled: false,\r\n    page: null\r\n  });\r\n  const [editMode, setEditMode] = useState(null); // State to track edit mode\r\n  const [editTitle, setEditTitle] = useState(''); // State to track the input value\r\n  const inputRef = useRef(null); // Ref to access the input element\r\n  const [newMode, setNewMode] = useState(null);\r\n  const [newPageParentID, setNewPageParentID] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [expandedPages, setExpandedPages] = useState([]);\r\n  const [dropdownStatus, setDropdownStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleClick = () => setContextMenu({\r\n        position: {\r\n            x: contextMenu.position.x,\r\n            y: contextMenu.position.y,\r\n        },\r\n        toggled: false,\r\n        page: null\r\n    });\r\n    window.addEventListener('click', handleClick);\r\n    return () => window.removeEventListener('click', handleClick);\r\n  }, [contextMenu.position.x, contextMenu.position.y]);\r\n\r\n  // Trigger context menu on right click\r\n  const handleRightClick = (e, page) => {\r\n    e.preventDefault();\r\n    console.log(page.title + \" clicked on\")\r\n\r\n    const x = e.clientX;\r\n    const y = e.clientY;\r\n    setContextMenu({\r\n        position: {\r\n            x,\r\n            y,\r\n        },\r\n        toggled: true,\r\n        page: page\r\n    });\r\n  };\r\n\r\n  // Creates new page with current page as parent\r\n  const handleCreatePageClick = async (page) => {\r\n    // Route to CreatePage\r\n    // Save parent id\r\n    setNewMode(true);\r\n    setNewPageParentID(page._id);\r\n    navigate('/page/new', { state: { parentId: page._id } });\r\n  };\r\n\r\n  // Toggles the value of the page dropdown element\r\n  const toggleExpand = (pageId) => {\r\n    setExpandedPages((prevState) =>\r\n      prevState.includes(pageId) ? prevState.filter((id) => id !== pageId) : [...prevState, pageId]\r\n    );\r\n  };\r\n  \r\n  // Changes to input, closes cm, and focuses input field when 'Rename Page' in context menu selected\r\n  const handleRenameClick = (page) => {\r\n    setEditMode(page._id);\r\n    setEditTitle(page.title);\r\n    setContextMenu({ ...contextMenu, toggled: false });\r\n    setTimeout(() => {\r\n      inputRef.current && inputRef.current.focus();\r\n    }, 0);\r\n  };\r\n\r\n  // Causes the blur and submit to happen at same time\r\n  const handleRenameSubmit = async (e) => {\r\n    if (e.key === 'Enter') {\r\n      inputRef.current && inputRef.current.blur(); // Trigger blur on Enter key\r\n    }\r\n  };\r\n\r\n  // Submits the rename to db and updates file, leaving input mode\r\n  const handleBlur = async () => {\r\n    try {\r\n      const response = await fetch('/pages/' + editMode, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ title: editTitle })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorJson = await response.json();\r\n        console.error('Error updating page:', errorJson);\r\n        return;\r\n      }\r\n\r\n      const updatedPage = await response.json();\r\n      dispatch({ type: 'UPDATE_PAGE', payload: updatedPage });\r\n      setEditMode(null);\r\n      setEditTitle('');\r\n    } catch (err) {\r\n      console.error('Failed to update page:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n        {/* LMNT Logo */}\r\n        <div className=\"logo\">\r\n            <NavLink to={'/page/home'} className=\"text\">LMNT</NavLink>\r\n        </div>\r\n        <NavLink className=\"create-page-button sidebar-item\" to={'/page/new'}>Create Page</NavLink>\r\n        \r\n        {/* Lists the pages in db */}\r\n        {pages && pages.map((page) => (\r\n          <div key={page._id} className=\"sidebar-item\" >\r\n            {/* If renaming, display input, otherwise link to page */}\r\n            {editMode === page._id ? (\r\n              <input\r\n                ref={inputRef} // Attach the ref to the input\r\n                className=\"rename-input\"\r\n                type=\"text\"\r\n                value={editTitle}\r\n                onChange={(e) => setEditTitle(e.target.value)}\r\n                onKeyDown={handleRenameSubmit}\r\n                onBlur={handleBlur}\r\n                autoFocus\r\n              />\r\n            ) : (\r\n              <PageListElem \r\n                key={page._id}\r\n                page={page}\r\n                level={0}\r\n                toggleExpand={toggleExpand}\r\n                expandedPages={expandedPages}\r\n                onContextMenu={handleRightClick}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n\r\n        {/* Context menu details */}\r\n        {contextMenu.toggled && (\r\n          <ContextMenu \r\n            isVisible={contextMenu.toggled}\r\n            position={contextMenu.position}\r\n            page={contextMenu.page}\r\n          >\r\n            {/* Create new page */} \r\n            <button className=\"context-menu-button\" onClick={() => handleCreatePageClick(contextMenu.page)}>New Subpage</button> \r\n            {/* Rename current page */}\r\n            <button className=\"context-menu-button\" onClick={() => handleRenameClick(contextMenu.page)}>Rename Page</button>\r\n            {/* Delete current page */}\r\n            <DeletePageButton page={contextMenu.page} className=\"context-menu-button\">Delete Page</DeletePageButton>\r\n          </ContextMenu>\r\n        )}\r\n    </div>    \r\n  );\r\n};\r\n\r\nexport default LeftSidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}