{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\LMNT\\\\frontend\\\\src\\\\components\\\\CreatePageForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { usePagesContext } from '../hooks/usePagesContext';\nimport TagInputForm from './TagInputForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePageForm = () => {\n  _s();\n  const {\n    dispatch\n  } = usePagesContext();\n  const [title, setTitle] = useState('');\n  const [tags, setTags] = useState([]);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    console.log('Submit requested'); // Debugging log\n    e.preventDefault();\n    if (e.key === 'Enter') return;\n    const page = {\n      title,\n      tags\n    };\n    try {\n      const response = await fetch('/api/pages', {\n        method: 'POST',\n        body: JSON.stringify(page),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        console.log('Found error in submitting form');\n        setError(json.error);\n      }\n      if (response.ok) {\n        setError(null);\n        // Reset form\n        setTitle('');\n        setTags([]);\n        console.log('Added page');\n        dispatch({\n          type: 'CREATE_PAGE',\n          payload: json\n        });\n      }\n    } catch (err) {\n      console.error('Submission failed', err);\n      setError('Something went wrong!');\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"inputs\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title,\n      placeholder: \"Page Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TagInputForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onKeyDown: handleKeyDown,\n      type: \"submit\",\n      children: \"Add Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePageForm, \"MKZ/cLT4g2jA177k4JKkgurL9jM=\", false, function () {\n  return [usePagesContext];\n});\n_c = CreatePageForm;\nexport default CreatePageForm;\nvar _c;\n$RefreshReg$(_c, \"CreatePageForm\");","map":{"version":3,"names":["React","useState","usePagesContext","TagInputForm","jsxDEV","_jsxDEV","CreatePageForm","_s","dispatch","title","setTitle","tags","setTags","error","setError","handleSubmit","e","console","log","preventDefault","key","page","response","fetch","method","body","JSON","stringify","headers","json","ok","type","payload","err","handleKeyDown","className","onSubmit","children","onChange","target","value","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onKeyDown","_c","$RefreshReg$"],"sources":["D:/Personal Projects/LMNT/frontend/src/components/CreatePageForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { usePagesContext } from '../hooks/usePagesContext'\r\nimport TagInputForm from './TagInputForm';\r\n\r\nconst CreatePageForm = () => {\r\n    const { dispatch } = usePagesContext()\r\n    const [title, setTitle] = useState('')\r\n    const [tags, setTags] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const handleSubmit = async (e) => {\r\n        console.log('Submit requested') // Debugging log\r\n        e.preventDefault()\r\n\r\n        if (e.key === 'Enter') return\r\n\r\n        const page = { title, tags }\r\n\r\n        try {\r\n            const response = await fetch('/api/pages', {\r\n                method: 'POST',\r\n                body: JSON.stringify(page),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            const json = await response.json()\r\n\r\n            if (!response.ok) {\r\n                console.log('Found error in submitting form')\r\n                setError(json.error)\r\n            } \r\n            if (response.ok) {\r\n                setError(null)\r\n                // Reset form\r\n                setTitle('')\r\n                setTags([])\r\n\r\n                console.log('Added page')\r\n                dispatch({ type: 'CREATE_PAGE', payload: json })\r\n            }\r\n        } catch (err) {\r\n            console.error('Submission failed', err)\r\n            setError('Something went wrong!')\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') return\r\n    }\r\n\r\n    return (\r\n        <form className=\"inputs\" onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                value={title}\r\n                placeholder=\"Page Title\"\r\n            />\r\n            <TagInputForm />\r\n            <button onKeyDown={handleKeyDown} type=\"submit\">Add Page</button> {/* Button for form submission */}\r\n            {error && <div className=\"error\">{error}</div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreatePageForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}