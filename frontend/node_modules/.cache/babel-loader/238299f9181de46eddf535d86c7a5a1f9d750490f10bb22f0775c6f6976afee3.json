{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\LMNT\\\\frontend\\\\src\\\\components\\\\LeftSidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/LeftSidebar.css';\nimport { usePagesContext } from '../hooks/usePagesContext';\n\n/* Contains the list of pages available on the left side, from their highest level\r\n    and sortable. To be created:\r\n\r\n    Framework\r\n    Create section/folder (not a page, just a sortation tool)\r\n        Creating a section will create a button with a label that expands all pages\r\n        stored in said section\r\n        Section Page (as mentioned below) will allow for a folder as well a front page for\r\n        the pages in the section, such as a country and then all of its city pages\r\n        listed below\r\n    Create section page (potentially add \"section: boolean\" to Page.js)\r\n    Dropdown for each section\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftSidebar = () => {\n  _s();\n  const {\n    pages,\n    dispatch\n  } = usePagesContext();\n  const handleClick = ({\n    page\n  }) => {\n    console.log('clicked on page:', page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Hello sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), pages && pages.map((page, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"listed-page-button\",\n      onClick: () => handleClick({\n        page\n      }),\n      children: page.title\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(LeftSidebar, \"/Iz+3K+6Z3U4XUv9I5Hvguxanls=\", false, function () {\n  return [usePagesContext];\n});\n_c = LeftSidebar;\nexport default LeftSidebar;\nvar _c;\n$RefreshReg$(_c, \"LeftSidebar\");","map":{"version":3,"names":["React","useState","usePagesContext","jsxDEV","_jsxDEV","LeftSidebar","_s","pages","dispatch","handleClick","page","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","title","_c","$RefreshReg$"],"sources":["D:/Personal Projects/LMNT/frontend/src/components/LeftSidebar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/LeftSidebar.css';\r\nimport { usePagesContext } from '../hooks/usePagesContext'\r\n\r\n/* Contains the list of pages available on the left side, from their highest level\r\n    and sortable. To be created:\r\n\r\n    Framework\r\n    Create section/folder (not a page, just a sortation tool)\r\n        Creating a section will create a button with a label that expands all pages\r\n        stored in said section\r\n        Section Page (as mentioned below) will allow for a folder as well a front page for\r\n        the pages in the section, such as a country and then all of its city pages\r\n        listed below\r\n    Create section page (potentially add \"section: boolean\" to Page.js)\r\n    Dropdown for each section\r\n*/\r\n\r\nconst LeftSidebar = () => {\r\n    const {pages, dispatch} = usePagesContext();\r\n\r\n    const handleClick = ({page}) => {\r\n        console.log('clicked on page:', page)\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar-container\">\r\n            <text>Hello sidebar</text>\r\n            {pages && pages.map((page, index) => (\r\n                <button className=\"listed-page-button\" key={index} onClick={() => handleClick({page})}>{page.title}</button>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftSidebar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,2BAA2B;AAClC,SAASC,eAAe,QAAQ,0BAA0B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,SAAAC,MAAA,IAAAC,OAAA;AAcA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAACC,KAAK;IAAEC;EAAQ,CAAC,GAAGN,eAAe,CAAC,CAAC;EAE3C,MAAMO,WAAW,GAAGA,CAAC;IAACC;EAAI,CAAC,KAAK;IAC5BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;EACzC,CAAC;EAED,oBACIN,OAAA;IAAKS,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BV,OAAA;MAAAU,QAAA,EAAM;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACzBX,KAAK,IAAIA,KAAK,CAACY,GAAG,CAAC,CAACT,IAAI,EAAEU,KAAK,kBAC5BhB,OAAA;MAAQS,SAAS,EAAC,oBAAoB;MAAaQ,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAAC;QAACC;MAAI,CAAC,CAAE;MAAAI,QAAA,EAAEJ,IAAI,CAACY;IAAK,GAAtDF,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0D,CAC9G,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAfKD,WAAW;EAAA,QACaH,eAAe;AAAA;AAAAqB,EAAA,GADvClB,WAAW;AAiBjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}